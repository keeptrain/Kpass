package com.keep.category

import android.content.DialogInterface
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.widget.EditText
import android.widget.Toast
import androidx.activity.enableEdgeToEdge
import androidx.activity.viewModels
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat
import androidx.lifecycle.lifecycleScope
import com.keep.category.databinding.ActivityCategoryBinding
import com.keep.model.Category
import dagger.hilt.android.AndroidEntryPoint
import kotlinx.coroutines.launch
import java.util.UUID

@AndroidEntryPoint
class CategoryActivity : AppCompatActivity() {

    private lateinit var binding : ActivityCategoryBinding

    private val viewModel : CategoryActivityViewModel by viewModels()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityCategoryBinding.inflate(layoutInflater)
        setContentView(binding.root)

        val newCategory = Category(id = "test", name = "")

        val autoGeneratedId: String = UUID.randomUUID().toString()


        binding.btnAdd.setOnClickListener {
            val alertDialogBuilder = AlertDialog.Builder(this)
            val inflater: LayoutInflater = layoutInflater
            val dialogLayout = inflater.inflate(R.layout.edit_text_category, null)
            val categoryEditText = dialogLayout.findViewById<EditText>(R.id.edt_category)

            with(alertDialogBuilder) {
                setTitle("Enter new category")
                setView(dialogLayout)
                setPositiveButton("Ok") { dialog, which ->
                    val categoryName = categoryEditText.text.toString() // Ambil teks setelah dialog ditampilkan
                    if (categoryName.isNotEmpty()) {
                        viewModel.insertCategory(categoryName)
                    } else {
                        // Tambahkan logika error handling jika kategori kosong
                        Toast.makeText(this@CategoryActivity, "Category cannot be empty", Toast.LENGTH_SHORT).show()
                    }
                }
                setNegativeButton("Cancel") { dialog, which ->
                    dialog.dismiss()
                }
                show()
            }
        }
    }

    private fun autoGeneratedId(): String {
        return "category"
    }
}